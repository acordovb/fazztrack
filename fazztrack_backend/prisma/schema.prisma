generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  // directUrl = env("DIRECT_URL")
}

model abonos {
  id            Int          @id @default(autoincrement())
  id_estudiante Int?
  total         Decimal      @db.Decimal(10, 2)
  tipo_abono    String?      @db.VarChar(100)
  fecha_abono   DateTime?    @default(now()) @db.Timestamp(6)
  estudiantes   estudiantes? @relation(fields: [id_estudiante], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model bares {
  id        Int         @id @default(autoincrement())
  nombre    String      @db.VarChar(255)
  productos productos[]
  ventas    ventas[]
}

model estudiantes {
  id                   Int      @id @default(autoincrement())
  nombre               String   @db.VarChar(255)
  celular              String?  @db.VarChar(20)
  curso                String?  @db.VarChar(100)
  nombre_representante String?  @db.VarChar(255)
  abonos               abonos[]
  ventas               ventas[]
}

model productos {
  id        Int      @id @default(autoincrement())
  nombre    String   @db.VarChar(255)
  id_bar    Int?
  precio    Decimal  @db.Decimal(10, 2)
  categoria String?
  bares     bares?   @relation(fields: [id_bar], references: [id], onDelete: Cascade, onUpdate: NoAction)
  ventas    ventas[]
}

model ventas {
  id                Int          @id @default(autoincrement())
  id_estudiante     Int?
  id_producto       Int?
  fecha_transaccion DateTime?    @default(now()) @db.Timestamp(6)
  id_bar            Int?
  n_productos       Int
  bares             bares?       @relation(fields: [id_bar], references: [id], onDelete: Cascade, onUpdate: NoAction)
  estudiantes       estudiantes? @relation(fields: [id_estudiante], references: [id], onDelete: Cascade, onUpdate: NoAction)
  productos         productos?   @relation(fields: [id_producto], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
